android.support.v13.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
android.support.v13.app.FragmentTabHost$SavedState
android.support.v13.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.BackStackState
android.support.v4.app.BackStackState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.Fragment$SavedState
android.support.v4.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentManagerState
android.support.v4.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentState
android.support.v4.app.FragmentState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
android.support.v4.app.FragmentTabHost$SavedState
android.support.v4.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColor(int)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColorResource(int)
android.support.v4.view.PagerTabStrip: int getTabIndicatorColor()
android.support.v4.view.PagerTabStrip: void setTextSpacing(int)
android.support.v4.view.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.PagerTabStrip: void setBackgroundColor(int)
android.support.v4.view.PagerTabStrip: void setBackgroundResource(int)
android.support.v4.view.PagerTabStrip: void setDrawFullUnderline(boolean)
android.support.v4.view.PagerTabStrip: boolean getDrawFullUnderline()
android.support.v4.view.PagerTabStrip: int getMinHeight()
android.support.v4.view.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStrip: void setTextSpacing(int)
android.support.v4.view.PagerTitleStrip: int getTextSpacing()
android.support.v4.view.PagerTitleStrip: void setNonPrimaryAlpha(float)
android.support.v4.view.PagerTitleStrip: void setTextColor(int)
android.support.v4.view.PagerTitleStrip: void setGravity(int)
android.support.v4.view.PagerTitleStrip: int getMinHeight()
android.support.v4.view.ViewPager: void setScrollState(int)
android.support.v4.view.ViewPager: void setAdapter(android.support.v4.view.PagerAdapter)
android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()
android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
android.support.v4.view.ViewPager: int getClientWidth()
android.support.v4.view.ViewPager: void setCurrentItem(int)
android.support.v4.view.ViewPager: int getCurrentItem()
android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
android.support.v4.view.ViewPager: void setChildrenDrawingOrderEnabledCompat(boolean)
android.support.v4.view.ViewPager: int getOffscreenPageLimit()
android.support.v4.view.ViewPager: void setOffscreenPageLimit(int)
android.support.v4.view.ViewPager: void setPageMargin(int)
android.support.v4.view.ViewPager: int getPageMargin()
android.support.v4.view.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.ViewPager: void setPageMarginDrawable(int)
android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)
android.support.v4.view.ViewPager$SavedState
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.DrawerLayout: void setScrimColor(int)
android.support.v4.widget.DrawerLayout: void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)
android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int)
android.support.v4.widget.DrawerLayout$SavedState
android.support.v4.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SlidingPaneLayout: void setParallaxDistance(int)
android.support.v4.widget.SlidingPaneLayout: int getParallaxDistance()
android.support.v4.widget.SlidingPaneLayout: void setSliderFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getSliderFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setCoveredFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getCoveredFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableRight(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowResource(int)
android.support.v4.widget.SlidingPaneLayout: void setShadowResourceLeft(int)
android.support.v4.widget.SlidingPaneLayout: void setShadowResourceRight(int)
android.support.v4.widget.SlidingPaneLayout$SavedState
android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SwipeRefreshLayout: void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)
android.support.v4.widget.SwipeRefreshLayout: void setTriggerPercentage(float)
android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean)
android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
bolts.AppLinkNavigation$NavigationResult: bolts.AppLinkNavigation$NavigationResult[] values()
bolts.AppLinkNavigation$NavigationResult: bolts.AppLinkNavigation$NavigationResult valueOf(java.lang.String)
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values()
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory: com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String)
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason[] values()
com.facebook.cache.common.CacheEventListener$EvictionReason: com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String)
com.facebook.cache.disk.DefaultDiskStorage$FileType: com.facebook.cache.disk.DefaultDiskStorage$FileType[] values()
com.facebook.cache.disk.DefaultDiskStorage$FileType: com.facebook.cache.disk.DefaultDiskStorage$FileType valueOf(java.lang.String)
com.facebook.common.internal.DoNotStrip
com.facebook.common.memory.MemoryTrimType: com.facebook.common.memory.MemoryTrimType[] values()
com.facebook.common.memory.MemoryTrimType: com.facebook.common.memory.MemoryTrimType valueOf(java.lang.String)
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType[] values()
com.facebook.common.statfs.StatFsHelper$StorageType: com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String)
com.facebook.common.time.MonotonicClock: long now()
com.facebook.common.util.TriState: com.facebook.common.util.TriState[] values()
com.facebook.common.util.TriState: com.facebook.common.util.TriState valueOf(java.lang.String)
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values()
com.facebook.datasource.AbstractDataSource$DataSourceStatus: com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String)
com.facebook.drawee.R$attr: int actualImageScaleType
com.facebook.drawee.R$attr: int backgroundImage
com.facebook.drawee.R$attr: int fadeDuration
com.facebook.drawee.R$attr: int failureImage
com.facebook.drawee.R$attr: int failureImageScaleType
com.facebook.drawee.R$attr: int overlayImage
com.facebook.drawee.R$attr: int placeholderImage
com.facebook.drawee.R$attr: int placeholderImageScaleType
com.facebook.drawee.R$attr: int pressedStateOverlayImage
com.facebook.drawee.R$attr: int progressBarAutoRotateInterval
com.facebook.drawee.R$attr: int progressBarImage
com.facebook.drawee.R$attr: int progressBarImageScaleType
com.facebook.drawee.R$attr: int retryImage
com.facebook.drawee.R$attr: int retryImageScaleType
com.facebook.drawee.R$attr: int roundAsCircle
com.facebook.drawee.R$attr: int roundBottomLeft
com.facebook.drawee.R$attr: int roundBottomRight
com.facebook.drawee.R$attr: int roundTopLeft
com.facebook.drawee.R$attr: int roundTopRight
com.facebook.drawee.R$attr: int roundWithOverlayColor
com.facebook.drawee.R$attr: int roundedCornerRadius
com.facebook.drawee.R$attr: int roundingBorderColor
com.facebook.drawee.R$attr: int roundingBorderWidth
com.facebook.drawee.R$attr: int viewAspectRatio
com.facebook.drawee.R$styleable: int[] GenericDraweeView
com.facebook.drawee.R$styleable: int GenericDraweeView_actualImageScaleType
com.facebook.drawee.R$styleable: int GenericDraweeView_backgroundImage
com.facebook.drawee.R$styleable: int GenericDraweeView_fadeDuration
com.facebook.drawee.R$styleable: int GenericDraweeView_failureImage
com.facebook.drawee.R$styleable: int GenericDraweeView_failureImageScaleType
com.facebook.drawee.R$styleable: int GenericDraweeView_overlayImage
com.facebook.drawee.R$styleable: int GenericDraweeView_placeholderImage
com.facebook.drawee.R$styleable: int GenericDraweeView_placeholderImageScaleType
com.facebook.drawee.R$styleable: int GenericDraweeView_pressedStateOverlayImage
com.facebook.drawee.R$styleable: int GenericDraweeView_progressBarAutoRotateInterval
com.facebook.drawee.R$styleable: int GenericDraweeView_progressBarImage
com.facebook.drawee.R$styleable: int GenericDraweeView_progressBarImageScaleType
com.facebook.drawee.R$styleable: int GenericDraweeView_retryImage
com.facebook.drawee.R$styleable: int GenericDraweeView_retryImageScaleType
com.facebook.drawee.R$styleable: int GenericDraweeView_roundAsCircle
com.facebook.drawee.R$styleable: int GenericDraweeView_roundBottomLeft
com.facebook.drawee.R$styleable: int GenericDraweeView_roundBottomRight
com.facebook.drawee.R$styleable: int GenericDraweeView_roundTopLeft
com.facebook.drawee.R$styleable: int GenericDraweeView_roundTopRight
com.facebook.drawee.R$styleable: int GenericDraweeView_roundWithOverlayColor
com.facebook.drawee.R$styleable: int GenericDraweeView_roundedCornerRadius
com.facebook.drawee.R$styleable: int GenericDraweeView_roundingBorderColor
com.facebook.drawee.R$styleable: int GenericDraweeView_roundingBorderWidth
com.facebook.drawee.R$styleable: int GenericDraweeView_viewAspectRatio
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event[] values()
com.facebook.drawee.components.DraweeEventTracker$Event: com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String)
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values()
com.facebook.drawee.drawable.RoundedCornersDrawable$Type: com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String)
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType[] values()
com.facebook.drawee.drawable.ScalingUtils$ScaleType: com.facebook.drawee.drawable.ScalingUtils$ScaleType valueOf(java.lang.String)
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values()
com.facebook.drawee.generic.RoundingParams$RoundingMethod: com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String)
com.facebook.drawee.view.DraweeView: DraweeView(android.content.Context)
com.facebook.drawee.view.DraweeView: DraweeView(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.view.DraweeView: DraweeView(android.content.Context,android.util.AttributeSet,int)
com.facebook.drawee.view.DraweeView: void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy()
com.facebook.drawee.view.DraweeView: android.graphics.drawable.Drawable getTopLevelDrawable()
com.facebook.drawee.view.DraweeView: void setController(com.facebook.drawee.interfaces.DraweeController)
com.facebook.drawee.view.DraweeView: com.facebook.drawee.interfaces.DraweeController getController()
com.facebook.drawee.view.DraweeView: void setImageDrawable(android.graphics.drawable.Drawable)
com.facebook.drawee.view.DraweeView: void setImageBitmap(android.graphics.Bitmap)
com.facebook.drawee.view.DraweeView: void setImageResource(int)
com.facebook.drawee.view.DraweeView: void setImageURI(android.net.Uri)
com.facebook.drawee.view.GenericDraweeView: GenericDraweeView(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy)
com.facebook.drawee.view.GenericDraweeView: GenericDraweeView(android.content.Context)
com.facebook.drawee.view.GenericDraweeView: GenericDraweeView(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.view.GenericDraweeView: GenericDraweeView(android.content.Context,android.util.AttributeSet,int)
com.facebook.drawee.view.GenericDraweeView: void setAspectRatio(float)
com.facebook.drawee.view.GenericDraweeView: float getAspectRatio()
com.facebook.drawee.view.SimpleDraweeView
com.facebook.drawee.view.SimpleDraweeView: SimpleDraweeView(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy)
com.facebook.drawee.view.SimpleDraweeView: SimpleDraweeView(android.content.Context)
com.facebook.drawee.view.SimpleDraweeView: SimpleDraweeView(android.content.Context,android.util.AttributeSet)
com.facebook.drawee.view.SimpleDraweeView: SimpleDraweeView(android.content.Context,android.util.AttributeSet,int)
com.facebook.drawee.view.SimpleDraweeView: com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder getControllerBuilder()
com.facebook.drawee.view.SimpleDraweeView: void setImageURI(android.net.Uri)
com.facebook.imageformat.ImageFormat: com.facebook.imageformat.ImageFormat[] values()
com.facebook.imageformat.ImageFormat: com.facebook.imageformat.ImageFormat valueOf(java.lang.String)
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod: com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod[] values()
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod: com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod valueOf(java.lang.String)
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult: com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult[] values()
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult: com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult valueOf(java.lang.String)
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority[] values()
com.facebook.imagepipeline.common.Priority: com.facebook.imagepipeline.common.Priority valueOf(java.lang.String)
com.facebook.imagepipeline.gif.GifFrame
com.facebook.imagepipeline.gif.GifFrame: int mNativeContext
com.facebook.imagepipeline.gif.GifFrame: GifFrame(int)
com.facebook.imagepipeline.gif.GifFrame: void nativeRenderFrame(int,int,android.graphics.Bitmap)
com.facebook.imagepipeline.gif.GifFrame: int nativeGetDurationMs()
com.facebook.imagepipeline.gif.GifFrame: int nativeGetWidth()
com.facebook.imagepipeline.gif.GifFrame: int nativeGetHeight()
com.facebook.imagepipeline.gif.GifFrame: int nativeGetXOffset()
com.facebook.imagepipeline.gif.GifFrame: int nativeGetYOffset()
com.facebook.imagepipeline.gif.GifFrame: int nativeGetDisposalMode()
com.facebook.imagepipeline.gif.GifFrame: boolean nativeHasTransparency()
com.facebook.imagepipeline.gif.GifFrame: void nativeDispose()
com.facebook.imagepipeline.gif.GifFrame: void nativeFinalize()
com.facebook.imagepipeline.gif.GifImage
com.facebook.imagepipeline.gif.GifImage: int mNativeContext
com.facebook.imagepipeline.gif.GifImage: GifImage(int)
com.facebook.imagepipeline.gif.GifImage: com.facebook.imagepipeline.gif.GifImage nativeCreateFromDirectByteBuffer(java.nio.ByteBuffer)
com.facebook.imagepipeline.gif.GifImage: com.facebook.imagepipeline.gif.GifImage nativeCreateFromNativeMemory(long,int)
com.facebook.imagepipeline.gif.GifImage: int nativeGetWidth()
com.facebook.imagepipeline.gif.GifImage: int nativeGetHeight()
com.facebook.imagepipeline.gif.GifImage: int nativeGetDuration()
com.facebook.imagepipeline.gif.GifImage: int nativeGetFrameCount()
com.facebook.imagepipeline.gif.GifImage: int[] nativeGetFrameDurations()
com.facebook.imagepipeline.gif.GifImage: int nativeGetLoopCount()
com.facebook.imagepipeline.gif.GifImage: com.facebook.imagepipeline.gif.GifFrame nativeGetFrame(int)
com.facebook.imagepipeline.gif.GifImage: int nativeGetSizeInBytes()
com.facebook.imagepipeline.gif.GifImage: void nativeDispose()
com.facebook.imagepipeline.gif.GifImage: void nativeFinalize()
com.facebook.imagepipeline.memory.NativeMemoryChunk
com.facebook.imagepipeline.memory.NativeMemoryChunk: long nativeAllocate(int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeFree(long)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyToByteArray(long,byte[],int,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeCopyFromByteArray(long,byte[],int,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: void nativeMemcpy(long,long,int)
com.facebook.imagepipeline.memory.NativeMemoryChunk: byte nativeReadByte(long)
com.facebook.imagepipeline.nativecode.Bitmaps
com.facebook.imagepipeline.nativecode.Bitmaps: void nativePinBitmap(android.graphics.Bitmap)
com.facebook.imagepipeline.nativecode.Bitmaps: void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.facebook.imagepipeline.nativecode.JpegTranscoder
com.facebook.imagepipeline.nativecode.JpegTranscoder: void nativeTranscodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int)
com.facebook.imagepipeline.nativecode.WebpTranscoder
com.facebook.imagepipeline.nativecode.WebpTranscoder: void nativeTranscodeWebpToJpeg(java.io.InputStream,java.io.OutputStream,int)
com.facebook.imagepipeline.nativecode.WebpTranscoder: void nativeTranscodeWebpToPng(java.io.InputStream,java.io.OutputStream)
com.facebook.imagepipeline.request.ImageRequest$ImageType: com.facebook.imagepipeline.request.ImageRequest$ImageType[] values()
com.facebook.imagepipeline.request.ImageRequest$ImageType: com.facebook.imagepipeline.request.ImageRequest$ImageType valueOf(java.lang.String)
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values()
com.facebook.imagepipeline.request.ImageRequest$RequestLevel: com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String)
com.facebook.imagepipeline.webp.WebPFrame
com.facebook.imagepipeline.webp.WebPFrame: int mNativeContext
com.facebook.imagepipeline.webp.WebPFrame: WebPFrame(int)
com.facebook.imagepipeline.webp.WebPFrame: void nativeRenderFrame(int,int,android.graphics.Bitmap)
com.facebook.imagepipeline.webp.WebPFrame: int nativeGetDurationMs()
com.facebook.imagepipeline.webp.WebPFrame: int nativeGetWidth()
com.facebook.imagepipeline.webp.WebPFrame: int nativeGetHeight()
com.facebook.imagepipeline.webp.WebPFrame: int nativeGetXOffset()
com.facebook.imagepipeline.webp.WebPFrame: int nativeGetYOffset()
com.facebook.imagepipeline.webp.WebPFrame: boolean nativeShouldDisposeToBackgroundColor()
com.facebook.imagepipeline.webp.WebPFrame: boolean nativeShouldBlendWithPreviousFrame()
com.facebook.imagepipeline.webp.WebPFrame: void nativeDispose()
com.facebook.imagepipeline.webp.WebPFrame: void nativeFinalize()
com.facebook.imagepipeline.webp.WebPImage
com.facebook.imagepipeline.webp.WebPImage: int mNativeContext
com.facebook.imagepipeline.webp.WebPImage: WebPImage(int)
com.facebook.imagepipeline.webp.WebPImage: com.facebook.imagepipeline.webp.WebPImage nativeCreateFromDirectByteBuffer(java.nio.ByteBuffer)
com.facebook.imagepipeline.webp.WebPImage: com.facebook.imagepipeline.webp.WebPImage nativeCreateFromNativeMemory(long,int)
com.facebook.imagepipeline.webp.WebPImage: int nativeGetWidth()
com.facebook.imagepipeline.webp.WebPImage: int nativeGetHeight()
com.facebook.imagepipeline.webp.WebPImage: int nativeGetDuration()
com.facebook.imagepipeline.webp.WebPImage: int nativeGetFrameCount()
com.facebook.imagepipeline.webp.WebPImage: int[] nativeGetFrameDurations()
com.facebook.imagepipeline.webp.WebPImage: int nativeGetLoopCount()
com.facebook.imagepipeline.webp.WebPImage: com.facebook.imagepipeline.webp.WebPFrame nativeGetFrame(int)
com.facebook.imagepipeline.webp.WebPImage: int nativeGetSizeInBytes()
com.facebook.imagepipeline.webp.WebPImage: void nativeDispose()
com.facebook.imagepipeline.webp.WebPImage: void nativeFinalize()
com.github.mikephil.charting.animation.Easing$EasingOption: com.github.mikephil.charting.animation.Easing$EasingOption[] values()
com.github.mikephil.charting.animation.Easing$EasingOption: com.github.mikephil.charting.animation.Easing$EasingOption valueOf(java.lang.String)
com.github.mikephil.charting.charts.BarChart
com.github.mikephil.charting.charts.BarChart: BarChart(android.content.Context)
com.github.mikephil.charting.charts.BarChart: BarChart(android.content.Context,android.util.AttributeSet)
com.github.mikephil.charting.charts.BarChart: BarChart(android.content.Context,android.util.AttributeSet,int)
com.github.mikephil.charting.charts.BarChart: void setDrawHighlightArrow(boolean)
com.github.mikephil.charting.charts.BarChart: void setDrawValueAboveBar(boolean)
com.github.mikephil.charting.charts.BarChart: void setDrawValuesForWholeStack(boolean)
com.github.mikephil.charting.charts.BarChart: void setDrawBarShadow(boolean)
com.github.mikephil.charting.charts.BarChart: com.github.mikephil.charting.data.BarData getBarData()
com.github.mikephil.charting.charts.BarChart: int getLowestVisibleXIndex()
com.github.mikephil.charting.charts.BarChart: int getHighestVisibleXIndex()
com.github.mikephil.charting.charts.BarLineChartBase: BarLineChartBase(android.content.Context,android.util.AttributeSet,int)
com.github.mikephil.charting.charts.BarLineChartBase: BarLineChartBase(android.content.Context,android.util.AttributeSet)
com.github.mikephil.charting.charts.BarLineChartBase: BarLineChartBase(android.content.Context)
com.github.mikephil.charting.charts.BarLineChartBase: void setVisibleXRangeMaximum(float)
com.github.mikephil.charting.charts.BarLineChartBase: void setVisibleXRangeMinimum(float)
com.github.mikephil.charting.charts.BarLineChartBase: void setOnDrawListener(com.github.mikephil.charting.listener.OnDrawListener)
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.listener.OnDrawListener getDrawListener()
com.github.mikephil.charting.charts.BarLineChartBase: void setMaxVisibleValueCount(int)
com.github.mikephil.charting.charts.BarLineChartBase: int getMaxVisibleCount()
com.github.mikephil.charting.charts.BarLineChartBase: void setHighlightPerDragEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setGridBackgroundColor(int)
com.github.mikephil.charting.charts.BarLineChartBase: void setDragEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setScaleEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setScaleXEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setScaleYEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDoubleTapToZoomEnabled(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDrawGridBackground(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDrawBorders(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setBorderWidth(float)
com.github.mikephil.charting.charts.BarLineChartBase: void setBorderColor(int)
com.github.mikephil.charting.charts.BarLineChartBase: int getLowestVisibleXIndex()
com.github.mikephil.charting.charts.BarLineChartBase: int getHighestVisibleXIndex()
com.github.mikephil.charting.charts.BarLineChartBase: float getScaleX()
com.github.mikephil.charting.charts.BarLineChartBase: float getScaleY()
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis getAxisLeft()
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.YAxis getAxisRight()
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.components.XAxis getXAxis()
com.github.mikephil.charting.charts.BarLineChartBase: void setPinchZoom(boolean)
com.github.mikephil.charting.charts.BarLineChartBase: void setDragOffsetX(float)
com.github.mikephil.charting.charts.BarLineChartBase: void setDragOffsetY(float)
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.XAxisRenderer getRendererXAxis()
com.github.mikephil.charting.charts.BarLineChartBase: void setXAxisRenderer(com.github.mikephil.charting.renderer.XAxisRenderer)
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer getRendererLeftYAxis()
com.github.mikephil.charting.charts.BarLineChartBase: void setRendererLeftYAxis(com.github.mikephil.charting.renderer.YAxisRenderer)
com.github.mikephil.charting.charts.BarLineChartBase: com.github.mikephil.charting.renderer.YAxisRenderer getRendererRightYAxis()
com.github.mikephil.charting.charts.BarLineChartBase: void setRendererRightYAxis(com.github.mikephil.charting.renderer.YAxisRenderer)
com.github.mikephil.charting.charts.BarLineChartBase: float getYChartMax()
com.github.mikephil.charting.charts.BarLineChartBase: float getYChartMin()
com.github.mikephil.charting.charts.BarLineChartBase: void setAutoScaleMinMaxEnabled(boolean)
com.github.mikephil.charting.charts.BubbleChart: com.github.mikephil.charting.data.BubbleData getBubbleData()
com.github.mikephil.charting.charts.CandleStickChart: com.github.mikephil.charting.data.CandleData getCandleData()
com.github.mikephil.charting.charts.Chart: Chart(android.content.Context)
com.github.mikephil.charting.charts.Chart: Chart(android.content.Context,android.util.AttributeSet)
com.github.mikephil.charting.charts.Chart: Chart(android.content.Context,android.util.AttributeSet,int)
com.github.mikephil.charting.charts.Chart: void setData(com.github.mikephil.charting.data.ChartData)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.Highlight[] getHighlighted()
com.github.mikephil.charting.charts.Chart: void setOnTouchListener(com.github.mikephil.charting.listener.ChartTouchListener)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.animation.ChartAnimator getAnimator()
com.github.mikephil.charting.charts.Chart: void setDragDecelerationEnabled(boolean)
com.github.mikephil.charting.charts.Chart: float getDragDecelerationFrictionCoef()
com.github.mikephil.charting.charts.Chart: void setDragDecelerationFrictionCoef(float)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ValueFormatter getDefaultValueFormatter()
com.github.mikephil.charting.charts.Chart: void setOnChartValueSelectedListener(com.github.mikephil.charting.listener.OnChartValueSelectedListener)
com.github.mikephil.charting.charts.Chart: void setOnChartGestureListener(com.github.mikephil.charting.listener.OnChartGestureListener)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.listener.OnChartGestureListener getOnChartGestureListener()
com.github.mikephil.charting.charts.Chart: void setHighlightEnabled(boolean)
com.github.mikephil.charting.charts.Chart: float getYValueSum()
com.github.mikephil.charting.charts.Chart: float getYMax()
com.github.mikephil.charting.charts.Chart: float getYMin()
com.github.mikephil.charting.charts.Chart: float getXChartMax()
com.github.mikephil.charting.charts.Chart: float getXChartMin()
com.github.mikephil.charting.charts.Chart: int getXValCount()
com.github.mikephil.charting.charts.Chart: float getAverage()
com.github.mikephil.charting.charts.Chart: int getValueCount()
com.github.mikephil.charting.charts.Chart: android.graphics.PointF getCenter()
com.github.mikephil.charting.charts.Chart: android.graphics.PointF getCenterOffsets()
com.github.mikephil.charting.charts.Chart: void setDescription(java.lang.String)
com.github.mikephil.charting.charts.Chart: void setDescriptionTypeface(android.graphics.Typeface)
com.github.mikephil.charting.charts.Chart: void setDescriptionTextSize(float)
com.github.mikephil.charting.charts.Chart: void setDescriptionColor(int)
com.github.mikephil.charting.charts.Chart: void setExtraTopOffset(float)
com.github.mikephil.charting.charts.Chart: float getExtraTopOffset()
com.github.mikephil.charting.charts.Chart: void setExtraRightOffset(float)
com.github.mikephil.charting.charts.Chart: float getExtraRightOffset()
com.github.mikephil.charting.charts.Chart: void setExtraBottomOffset(float)
com.github.mikephil.charting.charts.Chart: float getExtraBottomOffset()
com.github.mikephil.charting.charts.Chart: void setExtraLeftOffset(float)
com.github.mikephil.charting.charts.Chart: float getExtraLeftOffset()
com.github.mikephil.charting.charts.Chart: void setLogEnabled(boolean)
com.github.mikephil.charting.charts.Chart: void setNoDataText(java.lang.String)
com.github.mikephil.charting.charts.Chart: void setNoDataTextDescription(java.lang.String)
com.github.mikephil.charting.charts.Chart: void setTouchEnabled(boolean)
com.github.mikephil.charting.charts.Chart: void setMarkerView(com.github.mikephil.charting.components.MarkerView)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.MarkerView getMarkerView()
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.components.Legend getLegend()
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.renderer.LegendRenderer getLegendRenderer()
com.github.mikephil.charting.charts.Chart: android.graphics.RectF getContentRect()
com.github.mikephil.charting.charts.Chart: void setDrawMarkerViews(boolean)
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.data.ChartData getData()
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.utils.ViewPortHandler getViewPortHandler()
com.github.mikephil.charting.charts.Chart: com.github.mikephil.charting.renderer.DataRenderer getRenderer()
com.github.mikephil.charting.charts.Chart: void setRenderer(com.github.mikephil.charting.renderer.DataRenderer)
com.github.mikephil.charting.charts.Chart: android.graphics.PointF getCenterOfView()
com.github.mikephil.charting.charts.Chart: android.graphics.Bitmap getChartBitmap()
com.github.mikephil.charting.charts.Chart: java.util.ArrayList getJobs()
com.github.mikephil.charting.charts.Chart: void setHardwareAccelerationEnabled(boolean)
com.github.mikephil.charting.charts.CombinedChart: void setData(com.github.mikephil.charting.data.CombinedData)
com.github.mikephil.charting.charts.CombinedChart: void setFillFormatter(com.github.mikephil.charting.utils.FillFormatter)
com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.utils.FillFormatter getFillFormatter()
com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.LineData getLineData()
com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.BarData getBarData()
com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.ScatterData getScatterData()
com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.CandleData getCandleData()
com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.data.BubbleData getBubbleData()
com.github.mikephil.charting.charts.CombinedChart: void setDrawHighlightArrow(boolean)
com.github.mikephil.charting.charts.CombinedChart: void setDrawValueAboveBar(boolean)
com.github.mikephil.charting.charts.CombinedChart: void setDrawValuesForWholeStack(boolean)
com.github.mikephil.charting.charts.CombinedChart: void setDrawBarShadow(boolean)
com.github.mikephil.charting.charts.CombinedChart: com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] getDrawOrder()
com.github.mikephil.charting.charts.CombinedChart: void setDrawOrder(com.github.mikephil.charting.charts.CombinedChart$DrawOrder[])
com.github.mikephil.charting.charts.CombinedChart: void setData(com.github.mikephil.charting.data.ChartData)
com.github.mikephil.charting.charts.CombinedChart$DrawOrder: com.github.mikephil.charting.charts.CombinedChart$DrawOrder[] values()
com.github.mikephil.charting.charts.CombinedChart$DrawOrder: com.github.mikephil.charting.charts.CombinedChart$DrawOrder valueOf(java.lang.String)
com.github.mikephil.charting.charts.HorizontalBarChart: int getLowestVisibleXIndex()
com.github.mikephil.charting.charts.HorizontalBarChart: int getHighestVisibleXIndex()
com.github.mikephil.charting.charts.LineChart: void setFillFormatter(com.github.mikephil.charting.utils.FillFormatter)
com.github.mikephil.charting.charts.LineChart: com.github.mikephil.charting.utils.FillFormatter getFillFormatter()
com.github.mikephil.charting.charts.LineChart: com.github.mikephil.charting.data.LineData getLineData()
com.github.mikephil.charting.charts.PieChart: float[] getDrawAngles()
com.github.mikephil.charting.charts.PieChart: float[] getAbsoluteAngles()
com.github.mikephil.charting.charts.PieChart: void setHoleColor(int)
com.github.mikephil.charting.charts.PieChart: void setHoleColorTransparent(boolean)
com.github.mikephil.charting.charts.PieChart: void setDrawHoleEnabled(boolean)
com.github.mikephil.charting.charts.PieChart: void setCenterText(java.lang.String)
com.github.mikephil.charting.charts.PieChart: java.lang.String getCenterText()
com.github.mikephil.charting.charts.PieChart: void setDrawCenterText(boolean)
com.github.mikephil.charting.charts.PieChart: float getRequiredBottomOffset()
com.github.mikephil.charting.charts.PieChart: float getRequiredBaseOffset()
com.github.mikephil.charting.charts.PieChart: float getRadius()
com.github.mikephil.charting.charts.PieChart: android.graphics.RectF getCircleBox()
com.github.mikephil.charting.charts.PieChart: android.graphics.PointF getCenterCircleBox()
com.github.mikephil.charting.charts.PieChart: void setCenterTextTypeface(android.graphics.Typeface)
com.github.mikephil.charting.charts.PieChart: void setCenterTextSize(float)
com.github.mikephil.charting.charts.PieChart: void setCenterTextSizePixels(float)
com.github.mikephil.charting.charts.PieChart: void setCenterTextColor(int)
com.github.mikephil.charting.charts.PieChart: void setHoleRadius(float)
com.github.mikephil.charting.charts.PieChart: float getHoleRadius()
com.github.mikephil.charting.charts.PieChart: void setTransparentCircleColor(int)
com.github.mikephil.charting.charts.PieChart: void setTransparentCircleRadius(float)
com.github.mikephil.charting.charts.PieChart: float getTransparentCircleRadius()
com.github.mikephil.charting.charts.PieChart: void setDrawSliceText(boolean)
com.github.mikephil.charting.charts.PieChart: void setUsePercentValues(boolean)
com.github.mikephil.charting.charts.PieChart: void setCenterTextWordWrapEnabled(boolean)
com.github.mikephil.charting.charts.PieChart: void setCenterTextRadiusPercent(float)
com.github.mikephil.charting.charts.PieChart: float getCenterTextRadiusPercent()
com.github.mikephil.charting.charts.PieRadarChartBase: void setRotationAngle(float)
com.github.mikephil.charting.charts.PieRadarChartBase: float getRawRotationAngle()
com.github.mikephil.charting.charts.PieRadarChartBase: float getRotationAngle()
com.github.mikephil.charting.charts.PieRadarChartBase: void setRotationEnabled(boolean)
com.github.mikephil.charting.charts.PieRadarChartBase: float getDiameter()
com.github.mikephil.charting.charts.PieRadarChartBase: float getRadius()
com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBottomOffset()
com.github.mikephil.charting.charts.PieRadarChartBase: float getRequiredBaseOffset()
com.github.mikephil.charting.charts.PieRadarChartBase: float getYChartMax()
com.github.mikephil.charting.charts.PieRadarChartBase: float getYChartMin()
com.github.mikephil.charting.charts.RadarChart: float getFactor()
com.github.mikephil.charting.charts.RadarChart: float getSliceAngle()
com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.YAxis getYAxis()
com.github.mikephil.charting.charts.RadarChart: com.github.mikephil.charting.components.XAxis getXAxis()
com.github.mikephil.charting.charts.RadarChart: void setWebLineWidth(float)
com.github.mikephil.charting.charts.RadarChart: float getWebLineWidth()
com.github.mikephil.charting.charts.RadarChart: void setWebLineWidthInner(float)
com.github.mikephil.charting.charts.RadarChart: float getWebLineWidthInner()
com.github.mikephil.charting.charts.RadarChart: void setWebAlpha(int)
com.github.mikephil.charting.charts.RadarChart: int getWebAlpha()
com.github.mikephil.charting.charts.RadarChart: void setWebColor(int)
com.github.mikephil.charting.charts.RadarChart: int getWebColor()
com.github.mikephil.charting.charts.RadarChart: void setWebColorInner(int)
com.github.mikephil.charting.charts.RadarChart: int getWebColorInner()
com.github.mikephil.charting.charts.RadarChart: void setDrawWeb(boolean)
com.github.mikephil.charting.charts.RadarChart: float getRequiredBottomOffset()
com.github.mikephil.charting.charts.RadarChart: float getRequiredBaseOffset()
com.github.mikephil.charting.charts.RadarChart: float getRadius()
com.github.mikephil.charting.charts.RadarChart: float getYChartMax()
com.github.mikephil.charting.charts.RadarChart: float getYChartMin()
com.github.mikephil.charting.charts.RadarChart: float getYRange()
com.github.mikephil.charting.charts.ScatterChart: com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] getAllPossibleShapes()
com.github.mikephil.charting.charts.ScatterChart: com.github.mikephil.charting.data.ScatterData getScatterData()
com.github.mikephil.charting.charts.ScatterChart$ScatterShape: com.github.mikephil.charting.charts.ScatterChart$ScatterShape[] values()
com.github.mikephil.charting.charts.ScatterChart$ScatterShape: com.github.mikephil.charting.charts.ScatterChart$ScatterShape valueOf(java.lang.String)
com.github.mikephil.charting.components.Legend$LegendDirection: com.github.mikephil.charting.components.Legend$LegendDirection[] values()
com.github.mikephil.charting.components.Legend$LegendDirection: com.github.mikephil.charting.components.Legend$LegendDirection valueOf(java.lang.String)
com.github.mikephil.charting.components.Legend$LegendForm: com.github.mikephil.charting.components.Legend$LegendForm[] values()
com.github.mikephil.charting.components.Legend$LegendForm: com.github.mikephil.charting.components.Legend$LegendForm valueOf(java.lang.String)
com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition[] values()
com.github.mikephil.charting.components.Legend$LegendPosition: com.github.mikephil.charting.components.Legend$LegendPosition valueOf(java.lang.String)
com.github.mikephil.charting.components.LimitLine$LimitLabelPosition: com.github.mikephil.charting.components.LimitLine$LimitLabelPosition[] values()
com.github.mikephil.charting.components.LimitLine$LimitLabelPosition: com.github.mikephil.charting.components.LimitLine$LimitLabelPosition valueOf(java.lang.String)
com.github.mikephil.charting.components.MarkerView: void setupLayoutResource(int)
com.github.mikephil.charting.components.MarkerView: int getXOffset()
com.github.mikephil.charting.components.MarkerView: int getYOffset()
com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition[] values()
com.github.mikephil.charting.components.XAxis$XAxisPosition: com.github.mikephil.charting.components.XAxis$XAxisPosition valueOf(java.lang.String)
com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency[] values()
com.github.mikephil.charting.components.YAxis$AxisDependency: com.github.mikephil.charting.components.YAxis$AxisDependency valueOf(java.lang.String)
com.github.mikephil.charting.components.YAxis$YAxisLabelPosition: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition[] values()
com.github.mikephil.charting.components.YAxis$YAxisLabelPosition: com.github.mikephil.charting.components.YAxis$YAxisLabelPosition valueOf(java.lang.String)
com.github.mikephil.charting.data.filter.Approximator$ApproximatorType: com.github.mikephil.charting.data.filter.Approximator$ApproximatorType[] values()
com.github.mikephil.charting.data.filter.Approximator$ApproximatorType: com.github.mikephil.charting.data.filter.Approximator$ApproximatorType valueOf(java.lang.String)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.leyu.MainActivity
com.leyu.MainActivity: MainActivity()
com.leyu.R$array: int regions
com.leyu.R$attr: int actualImageScaleType
com.leyu.R$attr: int backgroundImage
com.leyu.R$attr: int fadeDuration
com.leyu.R$attr: int failureImage
com.leyu.R$attr: int failureImageScaleType
com.leyu.R$attr: int overlayImage
com.leyu.R$attr: int placeholderImage
com.leyu.R$attr: int placeholderImageScaleType
com.leyu.R$attr: int pressedStateOverlayImage
com.leyu.R$attr: int progressBarAutoRotateInterval
com.leyu.R$attr: int progressBarImage
com.leyu.R$attr: int progressBarImageScaleType
com.leyu.R$attr: int retryImage
com.leyu.R$attr: int retryImageScaleType
com.leyu.R$attr: int roundAsCircle
com.leyu.R$attr: int roundBottomLeft
com.leyu.R$attr: int roundBottomRight
com.leyu.R$attr: int roundTopLeft
com.leyu.R$attr: int roundTopRight
com.leyu.R$attr: int roundWithOverlayColor
com.leyu.R$attr: int roundedCornerRadius
com.leyu.R$attr: int roundingBorderColor
com.leyu.R$attr: int roundingBorderWidth
com.leyu.R$attr: int viewAspectRatio
com.leyu.R$color: int black
com.leyu.R$color: int blue
com.leyu.R$color: int brown
com.leyu.R$color: int brown01
com.leyu.R$color: int footer
com.leyu.R$color: int grey
com.leyu.R$color: int red
com.leyu.R$color: int red_01
com.leyu.R$color: int red_02
com.leyu.R$color: int title
com.leyu.R$dimen: int activity_horizontal_margin
com.leyu.R$dimen: int font_01
com.leyu.R$dimen: int font_02
com.leyu.R$dimen: int font_03
com.leyu.R$dimen: int font_04
com.leyu.R$dimen: int font_05
com.leyu.R$dimen: int font_06
com.leyu.R$dimen: int font_07
com.leyu.R$dimen: int header_height
com.leyu.R$dimen: int list_item_height
com.leyu.R$drawable: int back
com.leyu.R$drawable: int btn_free
com.leyu.R$drawable: int btn_hot
com.leyu.R$drawable: int btn_near
com.leyu.R$drawable: int btn_tab
com.leyu.R$drawable: int btn_weekend
com.leyu.R$drawable: int close
com.leyu.R$drawable: int community_icon_01
com.leyu.R$drawable: int community_icon_02
com.leyu.R$drawable: int community_icon_03
com.leyu.R$drawable: int community_icon_04
com.leyu.R$drawable: int community_icon_05
com.leyu.R$drawable: int community_icon_06
com.leyu.R$drawable: int cover
com.leyu.R$drawable: int dot
com.leyu.R$drawable: int focus
com.leyu.R$drawable: int free
com.leyu.R$drawable: int free_click
com.leyu.R$drawable: int gradient
com.leyu.R$drawable: int hot
com.leyu.R$drawable: int hot_click
com.leyu.R$drawable: int line
com.leyu.R$drawable: int love
com.leyu.R$drawable: int nearby
com.leyu.R$drawable: int nearby_click
com.leyu.R$drawable: int rectanglebackground
com.leyu.R$drawable: int rectanglebackground_01
com.leyu.R$drawable: int rectanglebackground_02
com.leyu.R$drawable: int ringbutton
com.leyu.R$drawable: int ringbutton_shadow
com.leyu.R$drawable: int rounded_brown
com.leyu.R$drawable: int rounded_btn_black
com.leyu.R$drawable: int rounded_btn_green
com.leyu.R$drawable: int rounded_btn_yellow
com.leyu.R$drawable: int rounded_edittext
com.leyu.R$drawable: int roundredbutton
com.leyu.R$drawable: int spinners
com.leyu.R$drawable: int weekend
com.leyu.R$drawable: int weekend_click
com.leyu.R$drawable: int white
com.leyu.R$drawable: int win_01
com.leyu.R$id: int address
com.leyu.R$id: int address_value
com.leyu.R$id: int back
com.leyu.R$id: int buttons
com.leyu.R$id: int calendar
com.leyu.R$id: int calendarView1
com.leyu.R$id: int calendar_text
com.leyu.R$id: int category
com.leyu.R$id: int category_text
com.leyu.R$id: int chart1
com.leyu.R$id: int close
com.leyu.R$id: int container
com.leyu.R$id: int cover
com.leyu.R$id: int description
com.leyu.R$id: int event_description
com.leyu.R$id: int event_image
com.leyu.R$id: int event_image_01
com.leyu.R$id: int event_image_02
com.leyu.R$id: int event_title
com.leyu.R$id: int event_title_01
com.leyu.R$id: int event_title_02
com.leyu.R$id: int fitage
com.leyu.R$id: int free
com.leyu.R$id: int headline
com.leyu.R$id: int headline_value
com.leyu.R$id: int holder
com.leyu.R$id: int holder_value
com.leyu.R$id: int hot
com.leyu.R$id: int left
com.leyu.R$id: int list
com.leyu.R$id: int mail
com.leyu.R$id: int message
com.leyu.R$id: int near
com.leyu.R$id: int price
com.leyu.R$id: int price_onsale
com.leyu.R$id: int price_value
com.leyu.R$id: int region
com.leyu.R$id: int region_text
com.leyu.R$id: int right
com.leyu.R$id: int share
com.leyu.R$id: int share_bg
com.leyu.R$id: int tab_image
com.leyu.R$id: int tab_title
com.leyu.R$id: int tabhost
com.leyu.R$id: int temp
com.leyu.R$id: int text
com.leyu.R$id: int time
com.leyu.R$id: int time_value
com.leyu.R$id: int title
com.leyu.R$id: int toast_layout_root
com.leyu.R$id: int top_menu
com.leyu.R$id: int topbar
com.leyu.R$id: int wechat
com.leyu.R$id: int weekend
com.leyu.R$layout: int activity_main
com.leyu.R$layout: int footer
com.leyu.R$layout: int header_recommand
com.leyu.R$layout: int listitem_event
com.leyu.R$layout: int listitem_event_02
com.leyu.R$layout: int listitem_recommand
com.leyu.R$layout: int page_detail
com.leyu.R$layout: int page_event
com.leyu.R$layout: int page_find
com.leyu.R$layout: int page_recommand
com.leyu.R$layout: int share
com.leyu.R$layout: int tabwidget
com.leyu.R$layout: int title_bar
com.leyu.R$layout: int toast
com.leyu.R$layout: int view_calendar
com.leyu.R$menu: int main
com.leyu.R$string: int add
com.leyu.R$string: int address
com.leyu.R$string: int app_name
com.leyu.R$string: int calendar
com.leyu.R$string: int category
com.leyu.R$string: int collection
com.leyu.R$string: int description
com.leyu.R$string: int extend
com.leyu.R$string: int facebook
com.leyu.R$string: int fitage
com.leyu.R$string: int free
com.leyu.R$string: int friends
com.leyu.R$string: int holder
com.leyu.R$string: int hot
com.leyu.R$string: int mail
com.leyu.R$string: int message
com.leyu.R$string: int near
com.leyu.R$string: int onsale_01
com.leyu.R$string: int onsale_02
com.leyu.R$string: int price
com.leyu.R$string: int recommand
com.leyu.R$string: int region
com.leyu.R$string: int search
com.leyu.R$string: int share
com.leyu.R$string: int share_title
com.leyu.R$string: int time
com.leyu.R$string: int wechat
com.leyu.R$string: int weekend
com.leyu.R$string: int weibo
com.leyu.R$styleable: int[] GenericDraweeView
com.leyu.R$styleable: int GenericDraweeView_actualImageScaleType
com.leyu.R$styleable: int GenericDraweeView_backgroundImage
com.leyu.R$styleable: int GenericDraweeView_fadeDuration
com.leyu.R$styleable: int GenericDraweeView_failureImage
com.leyu.R$styleable: int GenericDraweeView_failureImageScaleType
com.leyu.R$styleable: int GenericDraweeView_overlayImage
com.leyu.R$styleable: int GenericDraweeView_placeholderImage
com.leyu.R$styleable: int GenericDraweeView_placeholderImageScaleType
com.leyu.R$styleable: int GenericDraweeView_pressedStateOverlayImage
com.leyu.R$styleable: int GenericDraweeView_progressBarAutoRotateInterval
com.leyu.R$styleable: int GenericDraweeView_progressBarImage
com.leyu.R$styleable: int GenericDraweeView_progressBarImageScaleType
com.leyu.R$styleable: int GenericDraweeView_retryImage
com.leyu.R$styleable: int GenericDraweeView_retryImageScaleType
com.leyu.R$styleable: int GenericDraweeView_roundAsCircle
com.leyu.R$styleable: int GenericDraweeView_roundBottomLeft
com.leyu.R$styleable: int GenericDraweeView_roundBottomRight
com.leyu.R$styleable: int GenericDraweeView_roundTopLeft
com.leyu.R$styleable: int GenericDraweeView_roundTopRight
com.leyu.R$styleable: int GenericDraweeView_roundWithOverlayColor
com.leyu.R$styleable: int GenericDraweeView_roundedCornerRadius
com.leyu.R$styleable: int GenericDraweeView_roundingBorderColor
com.leyu.R$styleable: int GenericDraweeView_roundingBorderWidth
com.leyu.R$styleable: int GenericDraweeView_viewAspectRatio
com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite[] values()
com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite valueOf(java.lang.String)
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol[] values()
com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol valueOf(java.lang.String)
com.squareup.okhttp.TlsVersion: com.squareup.okhttp.TlsVersion[] values()
com.squareup.okhttp.TlsVersion: com.squareup.okhttp.TlsVersion valueOf(java.lang.String)
com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode[] values()
com.squareup.okhttp.internal.spdy.ErrorCode: com.squareup.okhttp.internal.spdy.ErrorCode valueOf(java.lang.String)
com.squareup.okhttp.internal.spdy.HeadersMode: com.squareup.okhttp.internal.spdy.HeadersMode[] values()
com.squareup.okhttp.internal.spdy.HeadersMode: com.squareup.okhttp.internal.spdy.HeadersMode valueOf(java.lang.String)
com.squareup.okhttp.internal.ws.WebSocket$PayloadType: com.squareup.okhttp.internal.ws.WebSocket$PayloadType[] values()
com.squareup.okhttp.internal.ws.WebSocket$PayloadType: com.squareup.okhttp.internal.ws.WebSocket$PayloadType valueOf(java.lang.String)
